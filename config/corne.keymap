/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none      &kp Q  &kp W  &kp E     &kp R      &kp T             &kp Y      &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LSHFT  &kp A  &kp S  &kp D     &kp F      &kp G             &kp H      &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V      &kp B             &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LALT  &lt 2 ESC  &mt LGUI ENTER    &kp SPACE  &lt 1 ESC  &mo 3
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CARET  &none      &kp LBKT  &kp LBRC          &kp LPAR   &kp UNDER    &kp DOLLAR  &kp RPAR  &kp RBRC  &kp RBKT   &kp TILDE  &kp BSPC
&none      &kp ASTRK  &kp EXCL  &kp COLON         &kp EQUAL  &kp PRCNT    &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT  &trans     &kp GRAVE
&kp LSHFT  &kp AMPS   &kp AT    &kp LA(NUMBER_3)  &kp PIPE   &kp MINUS    &kp PLUS    &trans    &trans    &trans     &trans     &trans
                                &trans            &trans     &trans       &trans      &trans    &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &kp DEL
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans        &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &trans
                          &trans  &trans  &trans     &trans  &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &kp C_VOL_DN          &kp C_VOL_UP          &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans                &trans                &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans                &trans
            >;
        };
    };
};
