/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&lt { flavor = "hold-preferred"; };

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB    &kp Q         &kp W        &kp E         &kp R        &kp T             &kp Y      &kp U        &kp I         &kp O        &kp P            &kp BSPC
&kp LSHFT  &hml LSHFT A  &hml LALT S  &hml LCTRL D  &hml LGUI F  &kp G             &kp H      &hmr LGUI J  &hmr LCTRL K  &hmr LALT L  &hmr RSHFT SEMI  &kp SQT
&kp LCTRL  &kp Z         &kp X        &kp C         &kp V        &kp B             &kp N      &kp M        &kp COMMA     &kp DOT      &kp FSLH         &kp RSHFT
                                      &kp LALT      &lt 2 ESC    &mt LGUI ENTER    &kp SPACE  &lt 1 ESC    &mo 3
            >;
        };

        lower_layer {
            bindings = <
&kp CARET  &none      &kp LBKT  &kp LBRC          &kp LPAR   &kp UNDER    &kp DOLLAR  &kp RPAR   &kp RBRC  &kp RBKT   &trans    &kp BSPC
&none      &kp ASTRK  &kp EXCL  &kp COLON         &kp EQUAL  &kp PRCNT    &kp LEFT    &kp DOWN   &kp UP    &kp RIGHT  &trans    &kp GRAVE
&kp LSHFT  &kp AMPS   &kp AT    &kp LA(NUMBER_3)  &kp PIPE   &kp MINUS    &kp PLUS    &kp TILDE  &trans    &trans     &kp BSLH  &trans
                                &trans            &trans     &trans       &trans      &trans     &trans
            >;
        };

        raise_layer {
            bindings = <
&trans  &kp F1   &kp F2   &kp F3  &kp F4  &kp F5     &trans  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &trans        &kp DEL
&trans  &kp F6   &kp F7   &kp F8  &kp F9  &kp F10    &trans  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans        &trans
&trans  &kp F11  &kp F12  &trans  &trans  &trans     &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &trans
                          &trans  &trans  &trans     &trans  &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &kp C_VOL_DN          &kp C_VOL_UP          &trans  &trans  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &trans                &trans                &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans                &trans
            >;
        };
    };
};
