/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include "../zmk-helpers/helper.h"
#include "../zmk-helpers/keypos_def/keypos_42keys.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

/* left-hand HRMs */
ZMK_HOLD_TAP(hml,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_R THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

/* right-hand HRMs */
ZMK_HOLD_TAP(hmr,
    flavor = "balanced";
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;                // repeat on tap-into-hold
    require-prior-idle-ms = <150>;
    bindings = <&kp>, <&kp>;
    hold-trigger-key-positions = <KEYS_L THUMBS>;
    hold-trigger-on-release;             // delay positional check until key-release
)

&lt { flavor = "hold-preferred"; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
//    ╭──────┬───┬───┬───┬──────┬──────────╮                           ╭──────────┬─────────────┬───┬───┬───┬──────╮
//    │ tab  │ Q │ W │ E │  R   │    T     │                           │    Y     │      U      │ I │ O │ P │ bspc │
//    ├──────┼───┼───┼───┼──────┼──────────┤                           ├──────────┼─────────────┼───┼───┼───┼──────┤
//    │ lsft │ A │ S │ D │  F   │    G     │                           │    H     │ &hmr lgui J │ K │ L │ ; │  '   │
//    ├──────┼───┼───┼───┼──────┼──────────┤                           ├──────────┼─────────────┼───┼───┼───┼──────┤
//    │ lctl │ Z │ X │ C │  V   │    B     │                           │    N     │      M      │ , │ . │ / │ rsft │
//    ╰──────┴───┴───┴───┼──────┼──────────┼─────────────╮       ╭─────┼──────────┼─────────────┼───┴───┴───┴──────╯
//                       │ lalt │ lt 2 esc │ mt lgui ent │       │ spc │ lt 1 esc │    mo 3     │                   
//                       ╰──────┴──────────┴─────────────╯       ╰─────┴──────────┴─────────────╯                   
  &kp TAB     &kp Q   &kp W   &kp E   &kp R      &kp T                                            &kp Y       &kp U         &kp I       &kp O     &kp P      &kp BSPC 
  &kp LSHFT   &kp A   &kp S   &kp D   &kp F      &kp G                                            &kp H       &hmr LGUI J   &kp K       &kp L     &kp SEMI   &kp SQT  
  &kp LCTRL   &kp Z   &kp X   &kp C   &kp V      &kp B                                            &kp N       &kp M         &kp COMMA   &kp DOT   &kp FSLH   &kp RSHFT
                                      &kp LALT   &lt 2 ESC   &mt LGUI ENTER           &kp SPACE   &lt 1 ESC   &mo 3                                                   
            >;
        };

        lower_layer {
            bindings = <
//    ╭──────┬─────┬───┬─────────┬─────┬─────╮                   ╭──────┬──────┬─────┬──────┬─────┬──────╮
//    │  ^   │     │ [ │    {    │  (  │  _  │                   │  $   │  )   │  }  │  ]   │     │ bspc │
//    ├──────┼─────┼───┼─────────┼─────┼─────┤                   ├──────┼──────┼─────┼──────┼─────┼──────┤
//    │      │  *  │ ! │    :    │  =  │  %  │                   │ left │ down │ up  │ rght │     │  `   │
//    ├──────┼─────┼───┼─────────┼─────┼─────┤                   ├──────┼──────┼─────┼──────┼─────┼──────┤
//    │ lsft │  &  │ @ │ lalt(3) │  |  │  -  │                   │  +   │  ~   │     │      │  \  │      │
//    ╰──────┴─────┴───┴─────────┼─────┼─────┼─────╮       ╭─────┼──────┼──────┼─────┴──────┴─────┴──────╯
//                               │     │     │     │       │     │      │      │                          
//                               ╰─────┴─────┴─────╯       ╰─────┴──────┴──────╯                          
  &kp CARET   &none       &kp LBKT   &kp LBRC           &kp LPAR    &kp UNDER                             &kp DOLLAR   &kp RPAR    &kp RBRC   &kp RBKT    &trans     &kp BSPC 
  &none       &kp ASTRK   &kp EXCL   &kp COLON          &kp EQUAL   &kp PRCNT                             &kp LEFT     &kp DOWN    &kp UP     &kp RIGHT   &trans     &kp GRAVE
  &kp LSHFT   &kp AMPS    &kp AT     &kp LA(NUMBER_3)   &kp PIPE    &kp MINUS                             &kp PLUS     &kp TILDE   &trans     &trans      &kp BSLH   &trans   
                                                        &trans      &trans      &trans           &trans   &trans       &trans                                                 
            >;
        };

        raise_layer {
            bindings = <
//    ╭─────┬─────┬─────┬─────┬─────┬─────╮                   ╭─────┬─────┬───┬───┬─────┬─────╮
//    │     │ f1  │ f2  │ f3  │ f4  │ f5  │                   │     │  7  │ 8 │ 9 │     │ del │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                   ├─────┼─────┼───┼───┼─────┼─────┤
//    │     │ f6  │ f7  │ f8  │ f9  │ f10 │                   │     │  4  │ 5 │ 6 │     │     │
//    ├─────┼─────┼─────┼─────┼─────┼─────┤                   ├─────┼─────┼───┼───┼─────┼─────┤
//    │     │ f11 │ f12 │     │     │     │                   │     │  1  │ 2 │ 3 │  0  │     │
//    ╰─────┴─────┴─────┴─────┼─────┼─────┼─────╮       ╭─────┼─────┼─────┼───┴───┴─────┴─────╯
//                            │     │     │     │       │     │     │     │                    
//                            ╰─────┴─────┴─────╯       ╰─────┴─────┴─────╯                    
  &trans   &kp F1    &kp F2    &kp F3   &kp F4   &kp F5                              &trans   &kp NUMBER_7   &kp NUMBER_8   &kp NUMBER_9   &trans         &kp DEL
  &trans   &kp F6    &kp F7    &kp F8   &kp F9   &kp F10                             &trans   &kp NUMBER_4   &kp NUMBER_5   &kp NUMBER_6   &trans         &trans 
  &trans   &kp F11   &kp F12   &trans   &trans   &trans                              &trans   &kp NUMBER_1   &kp NUMBER_2   &kp NUMBER_3   &kp NUMBER_0   &trans 
                                        &trans   &trans    &trans           &trans   &trans   &trans                                                             
            >;
        };

        layer_3 {
            bindings = <
//    ╭────────┬──────────┬──────────┬──────────┬──────────┬──────────╮                   ╭─────┬──────┬──────┬─────┬─────┬─────╮
//    │ bt_clr │ bt_sel 0 │ bt_sel 1 │ bt_sel 2 │ bt_sel 3 │ bt_sel 4 │                   │     │ bri- │ bri+ │     │     │     │
//    ├────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                   ├─────┼──────┼──────┼─────┼─────┼─────┤
//    │        │          │          │          │          │          │                   │     │ vold │ volu │     │     │     │
//    ├────────┼──────────┼──────────┼──────────┼──────────┼──────────┤                   ├─────┼──────┼──────┼─────┼─────┼─────┤
//    │        │          │          │          │          │          │                   │     │      │      │     │     │     │
//    ╰────────┴──────────┴──────────┴──────────┼──────────┼──────────┼─────╮       ╭─────┼─────┼──────┼──────┴─────┴─────┴─────╯
//                                              │          │          │     │       │     │     │      │                         
//                                              ╰──────────┴──────────┴─────╯       ╰─────┴─────┴──────╯                         
  &bt BT_CLR   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                             &trans   &kp C_BRIGHTNESS_DEC   &kp C_BRIGHTNESS_INC   &trans   &trans   &trans
  &trans       &trans         &trans         &trans         &trans         &trans                                   &trans   &kp C_VOL_DN           &kp C_VOL_UP           &trans   &trans   &trans
  &trans       &trans         &trans         &trans         &trans         &trans                                   &trans   &trans                 &trans                 &trans   &trans   &trans
                                                            &trans         &trans         &trans           &trans   &trans   &trans                                                                
            >;
        };
    };
};
